---
title: "Deliverable 3"
format: html
editor: visual
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
library(readxl)
library(tidyr)
library(dplyr)
library(readr)
library(stringr) 
```

```{r}
#I had to pivot longer and then pivot wider one of the Freedom House datasets because the Years were across the columns instead of in one column so I incorporated part of Deliverable 2 into Deliverable 3 

Freedom_House_2_import <- rio::import("https://github.com/dftorres1984/Assignment_Two/raw/refs/heads/main/DataCleanAndFormatted/Clean_Freedom_House_2.csv")

#I check the imported file.  
str(Freedom_House_2_import)

# I change "Country/Territory" to "Country" and rename the other columns include with the correct year. 
Formatted_Freedom_House_2 <- Freedom_House_2_import %>% rename(Country = "Country/Territory", `Political Rights_2003` = `FIW03 PR`, `Political Rights_2004` = `FIW04 PR`, `Political Rights_2005` = `FIW05 PR`, `Civil Liberties_2003` = `FIW03 CL`, `Civil Liberties_2004` = `FIW04 CL`, `Civil Liberties_2005` = `FIW05 CL`, `Total Score_2003` = `FIW03 Total`, `Total Score_2004` = `FIW04 Total`, `Total Score_2005` = `FIW05 Total`)

#I eliminate the "C/T?" column. I'll only keep countries.  
Formatted_Freedom_House_2 <- subset(Formatted_Freedom_House_2, select = -`C/T?`)

#Filter the countries to match the countries in LIED database.  
Formatted_Freedom_House_2 <- Formatted_Freedom_House_2 %>% filter(Country %in% c("Greece", "Italy", "Austria", "United States", "South Korea", "Portugal", "Japan", "Belgium", "Czech Republic", "Spain", "United Kingdom", "Canada", "France", "Iceland", "Australia", "Germany", "Netherlands", "Ireland", "Finland", "Switzerland", "New Zealand", "Denmark", "Sweden", "Norway", "Hungary", "Poland", "Slovakia", "Estonia", "Latvia", "Lithuania", "Slovenia", "Cyprus", "Malta", "Bulgaria", "Romania", "Croatia"))

#I shifted the columns longer so the years were now in one column 
Formatted_Freedom_House_2 <- Formatted_Freedom_House_2 %>% pivot_longer( cols = !Country, names_to = c("Variable", "Year"), names_sep = "_", values_to = "Data")

#I shifted the data back to wider so I could line up the data with the correct years 
Formatted_Freedom_House_2 <- Formatted_Freedom_House_2 %>% pivot_wider(names_from = c(Variable), values_from = Data)

#I rechecked the columns to determine if they were numeric or character
str(Formatted_Freedom_House_2)

#I converted the new column Year into numeric
Formatted_Freedom_House_2$Year <- as.numeric(Formatted_Freedom_House_2$Year)

#I also converted Freedom_House_2 columns to match exactly the Freedom House columns
Formatted_Freedom_House_2 <- Formatted_Freedom_House_2 %>% rename(`Political_Rights` = `Political Rights`, Civil_Liberties = `Civil Liberties`, `Total_Score` = `Total Score`)

#I made one final confirmation before saving
str(Formatted_Freedom_House_2)

folder <- "DataCleanAndFormatted"
#check if the folder exists 
if(!dir.exists(folder)) {
  #Create folder 
  dir.create(folder)
  saveRDS(Formatted_Freedom_House_2,file.path(folder, "Formatted_Freedom_House_2.RDS"))
} else {
  saveRDS(Formatted_Freedom_House_2,file.path(folder, "Formatted_Freedom_House_2.RDS"))}
```

```{r}
LIED <- rio::import("https://github.com/dftorres1984/Assignment_Three/raw/refs/heads/main/DataCleanAndFormatted/Formatted_LIED.RDS")
Freedom_House <- rio::import("https://github.com/dftorres1984/Assignment_Three/raw/refs/heads/main/DataCleanAndFormatted/Formatted_Freedom_House.RDS")
Freedom_House_2 <- rio::import("https://github.com/dftorres1984/Assignment_Three/raw/refs/heads/main/DataCleanAndFormatted/Formatted_Freedom_House_2.RDS")
V_Dem <- rio::import("https://github.com/dftorres1984/Assignment_Three/raw/refs/heads/main/DataCleanAndFormatted/Formatted_V_Dem.RDS")
```

You can add options to executable code like this

```{r}
#I'm going to cross check for the Country column in each dataset, which allows me to determine which countries are missing or spelled differently. 

countries_v_dem <- unique(V_Dem$Country)
countries_freedom_house <- unique(Freedom_House$Country)
unique_to_v_dem <- setdiff(countries_v_dem, countries_freedom_house)
print("Unique to V_Dem: v Freedom House")

countries_LIED <- unique(LIED$Country)
unique_to_LIED <- setdiff(countries_LIED, countries_freedom_house)
print("Unique to LIED v Freedom_House")
print(unique_to_LIED)


unique_to_LIED_2 <- setdiff(countries_LIED, countries_v_dem)
print("Unique to LIED v V-Dem")
print(unique_to_LIED_2)

#After checking, I decided to change V-Dem's "United States of America" and "Czechia" to "United States" and "Czech Republic." And I'm going to change LIED's dataset from "Korea, South" to "South Korea" to match the Freedom House datasets. This will allow for cleaner merge process.    

LIED$Country[LIED$Country == "Korea, South"] <- "South Korea" 
V_Dem$Country[V_Dem$Country == "United States of America"] <- "United States"
V_Dem$Country[V_Dem$Country == "Czechia"] <- "Czech Republic" 
```

```{r}
#First, I rbind the Freedom House datasets now that all of the columns are the same name and arrange the columns by Country and Year. 

Combined_FH_data <- rbind(Freedom_House_2, Freedom_House)
Combined_FH_data <- Combined_FH_data %>% arrange(Country, Year)

# I then merge the Freedom House dataset with LEAD.  

Merged_FH_LIED <- merge(Combined_FH_data, LIED, by = c("Country", "Year"), all = TRUE)

#I then make the final merge of the combined Freedom House and LIED dataset with V_Dem. 
Final_Merge <- merge(Merged_FH_LIED, V_Dem, by = c("Country", "Year"), all = TRUE)
```

The `echo: false` option disables the printing of code (only output is displayed).
